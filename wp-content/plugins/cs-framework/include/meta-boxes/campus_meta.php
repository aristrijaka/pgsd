<?php/** * @Add Meta Box For Events * @return * */if( ! class_exists('cs_campus_meta') ) {	class cs_campus_meta {				public function __construct(){			add_action('add_meta_boxes', array($this, 'cs_meta_campus_add'));			//add_action('wp_ajax_add_port_proc_to_list', array($this, 'add_port_proc_to_list'));			 //add_action('wp_ajax_add_port_proc_to_list', 'add_port_proc_to_list');		}		function cs_meta_campus_add(){  			add_meta_box( 'cs_meta_campus',  __('Campus Options','cs_frame'), array($this, 'cs_meta_campus'), 'campus', 'normal', 'high' );  		}				function cs_meta_campus( $post ) {			global $post ,$cs_theme_options, $page_option,$cs_form_meta;			$cs_theme_options = get_option('cs_theme_options');			$cs_builtin_seo_fields  = isset( $cs_theme_options['cs_builtin_seo_fields'] ) ? $cs_theme_options['cs_builtin_seo_fields'] : ''; 			$cs_header_position 	= isset( $cs_theme_options['cs_header_position'] ) ? $cs_theme_options['cs_header_position'] : '';								?>					<div class="page-wrap page-opts left" style="overflow:hidden; position:relative; height: 1432px;">				<div class="option-sec" style="margin-bottom:0;">					<div class="opt-conts">						<div class="elementhidden">							<nav class="admin-navigtion">							  <ul id="cs-options-tab">								<?php 								if( function_exists('cs_header_postition_element') && function_exists('cs_seo_settitngs_element') ) {									if($cs_header_position == 'absolute'){?>										<li><a href="javascript:;" name="#tab-header-position-settings"><i class="icon-forward"></i><?php _e('Header Absolute','cs_frame');?></a></li>									<?php } ?>																		<?php } ?>                                <li><a href="javascript:;" name="#tab-location-settings"><i class="icon-location2"></i><?php _e('Location','cs_frame');?></a></li>							</ul>							</nav>							<div id="tabbed-content">                            	                            	                                <div id="tab-location-settings" style="width:100%;">									<?php $this->cs_location_fields(); ?>                                </div>															</div>  						</div>					</div>				</div>			</div>			<div class="clear"></div>		<?php        }								function cs_location_fields(){			global $post, $cs_form_meta;						if( function_exists('cs_enqueue_location_gmap_script') ) {					cs_enqueue_location_gmap_script();			}						$cs_form_meta->cs_form_checkbox_with_field_render(				array(  'name'	=> __('Location Map','cs_frame'),						'id'	=> 'map_switch',						'classes' => '',						'std'	=> '',						'description'  => '',						'hint'  => '',						'field' => array( 'field_name'   => __('','cs_frame'),										  'field_id'	 => 'map_heading',										  'field_std'    =>__('Campus Location','cs_frame'), 						)					)			);					$cs_form_meta->cs_form_text_render(					array(  'name'	=> __('Address','cs_frame'),							'id'	=> 'location_address',							'classes' => 'gllpSearchButton',							'std'	=> '',							'description'  => '',							'hint'  => ''						)			);													$cs_form_meta->cs_form_text_render(					array(  'name'	=> __('latitude','cs_frame'),							'id'	=> 'loc_latitude',							'classes' => 'gllpSearchButton',							'std'	=> '51.507351',							'description'  => '',							'hint'  => ''						)			);							$cs_form_meta->cs_form_text_render(					array(  'name'	=> __('longitude','cs_frame'),							'id'	=> 'loc_longitude',							'classes' => 'gllpSearchButton',							'std'	=> '-0.127758',							'description'  => '',							'hint'  => ''						)			);			$cs_form_meta->cs_form_text_render(					array(  'name'	=> __('City / Town','cs_frame'),							'id'	=> 'loc_city',							'classes' => 'gllpSearchButton',							'std'	=> '',							'description'  => '',							'hint'  => ''						)			);					$cs_form_meta->cs_form_text_render(					array(  'name'	=> __('Post Code','cs_frame'),							'id'	=> 'loc_postcode',							'classes' => 'gllpSearchButton',							'std'	=> '',							'description'  => '',							'hint'  => ''						)			);					$cs_form_meta->cs_form_text_render(					array(  'name'	=> __('Region','cs_frame'),							'id'	=> 'loc_region',							'classes' => 'gllpSearchButton',							'std'	=> '',							'description'  => '',							'hint'  => ''						)			);												if( function_exists('cs_get_countries') ) {						foreach( cs_get_countries() as $key => $val ):					$countries_list[$val]	= $val;				endforeach;		 				$cs_form_meta->cs_form_select_render(					array(  'name'	=> __('Country','cs_frame'),							'id'	=> 'loc_country',							'classes' => 'gllpSearchButton',							'std'	=> '',							'onclick'	   => '',							'status'	   => '',							'description'  => '',							'options' 	   => $countries_list,						)				);				}						$cs_form_meta->cs_location_map_render(				array(  'name'	=> __('Search This Location on Map','cs_frame'),						'id'	=> 'campus_map',						'classes' => '',						'std'	=> '',						'description'  => '',						'hint'  => ''					)			);		}	}		return new cs_campus_meta();}